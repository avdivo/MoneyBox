<?php
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
Новый месяц
Программа запускается по таймеру CRON в начале каждого нового месяца
И производит пересчет таблици Истории и формирования из нее строки в таблицу Статистики для каждогой копилки
После чего очищяется История

История может содержать только один месяц, если там содержится информация о большем количестве месяцев
сообщяется об ошибке
*/////////////////////////////////////////////////////////////////////////////////////////////////////////

//------------------------------------------------------------------------------------------


//Читаем за какой месяц и год содержатся данные в статистике
//Там должны быть данные только за один месяц одного года
//Запрос группирует записи по году и месяцу и возвращяет дату в виде Y-m
//Если вернет одну строку, значит все нормально, занные там правильные, если строк больше сообщаем об ошибке
$query = "SELECT DATE_FORMAT(`date`, '%Y-%m') AS `date`
FROM `history` 
GROUP BY DATE_FORMAT(`date`, '%Y-%m')";

$result = mysqli_query($link, $query); 
//Узнаем, сколько записей вернул запрос, если одну выполняем программу
if(mysqli_num_rows($result) == 1)
{
	$row = mysqli_fetch_array($result); //Теперь в $row[0] Y-m записей в истории
	$last = $row[0] . '-01'; //Дополняем дату до полной для последующей обработки

	$nameBox = MoneyBox::getNamesBox(); //Копилки. Ассоциированный массив id копилки -> Название
	unset ($nameBox[1]); //Удаляем из массива копилку Бюджет
	//Остальные копилки перебираем и получаем о них статистику из истории за указанный месяц в переменной last
	//Все операции должны быть произведены транзакцией, готовим массив запросов
	$query = [];

	foreach ($nameBox as $box => $value) {
		//Создаем объект статистики для каждой копилки по ее номеру и дате
		$stat = new statistics($box); //Создается объект с пустыми свойствами
		$stat->statFromHist($last); //Заполняем свойства объекта данными из истории

		$query[] = "INSERT INTO `statistics` 
		SET `boxStat`='$stat->boxStat', `month`='$stat->month', `summa`='$stat->summa', `income`='$stat->income', 
		`spending`='$stat->spending', `avg`='$stat->avg', `max`='$stat->max', `maxDate`='$stat->maxDate', 
		`debtsPlus`='$stat->debtsPlus', `debtsMinus`='$stat->debtsMinus'";
	}

	$query[] = "TRUNCATE TABLE `history`"; //Чистим таблицу исории
	
	//Запрос необходимо производить транзакцией, поэтому запускаем ее
	mysqli_begin_transaction ($link);

	//Выполняем запросы в цикле, по очереди, если возникла ошибка, прекращяем
	foreach ($query as $value) {
		
		if (!$result = mysqli_query($link, $value)) {
			mysqli_rollback ($link); //Где то ошибка, запросы не выполнены.
			return ('-1'); //Сообщаем о проблеме при обработке истории и формировании статистики
		}
	}
	
	if (!mysqli_commit ($link)) {
		return ('-1'); //Сообщаем о проблеме при обработке истории и формировании статистики
	}

} else return ('-1'); //Сообщаем о проблеме при обработке истории и формировании статистики




?>